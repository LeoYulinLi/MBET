{"version":3,"sources":["states/ui/uiActions.ts","components/AccountCard.tsx","components/AccountIndex.tsx","components/Overview.tsx","states/account/accountActions.ts","states/expense/expenseActions.ts","states/category/categoryActions.ts","components/EditExpense.tsx","styles/theme.ts","components/Nav.tsx","components/ExpenseIndex.tsx","types.ts","components/EditAccount.tsx","components/CategoryCard.tsx","components/CategoryIndex.tsx","components/EditCategory.tsx","components/Home.tsx","App.tsx","states/ui/uiReducer.ts","states/rootReducer.ts","states/account/accountReducer.ts","states/category/categoryReducer.ts","states/expense/expenseReducer.ts","index.tsx","states/store.ts"],"names":["openAddExpense","providedExpense","type","action","opened","openEditAccount","providedAccount","openEditCategory","providedCategory","AccountCard","account","dispatch","useDispatch","BankCard","styled","Card","background","color","getContrastRatio","Grid","item","xs","md","CardActionArea","onClick","CardContent","container","justify","spacing","alignItems","Icon","icon","Typography","variant","title","AccountIndex","accounts","useSelector","state","Box","m","Button","Object","entries","map","id","key","Overview","createAccount","deleteExpense","expenseId","createCategory","category","deleteCategory","categoryId","EditExpense","ui","addExpense","useState","setTitle","amount","setAmount","setAccount","setCategory","Date","now","date","setDate","categories","useEffect","accountId","titleRef","useRef","closeDialog","Dialog","open","onClose","p","onSubmit","event","preventDefault","expense","createExpense","handleSave","current","focus","resetFields","DialogTitle","DialogContent","TextField","autoFocus","label","value","onChange","it","target","fullWidth","required","ref","FormControl","InputLabel","htmlFor","Input","toFixed","inputProps","step","startAdornment","InputAdornment","position","AccountSelector","CategorySelector","utils","DateFnsUtils","disableToolbar","format","margin","KeyboardButtonProps","DialogActions","filter","createFilterOptions","options","values","newValue","message","Math","random","filterOptions","params","filtered","inputValue","push","getOptionLabel","option","renderInput","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","default","Nav","isPhone","useMediaQuery","breakpoints","down","location","useLocation","history","useHistory","setTab","tabProps","index","classes","makeStyles","createStyles","bottomNav","width","bottom","zIndex","useStyles","AppBar","Container","maxWidth","Toolbar","BottomNavigation","pathname","className","BottomNavigationAction","BarChart","AccountBalance","Category","Receipt","Tabs","Tab","component","Link","to","expenses","expenseValues","setExpenseValues","accountFilterState","categoryFilterState","startDate","setStartDate","endDate","setEndDate","sortByState","orderState","accountFilters","categoryFilters","sortBy","order","dateUtils","length","includes","isBefore","isAfter","sort","a","b","comparator","str1","str2","aValue","bValue","handleEdit","my","Paper","elevation","style","Filter","valueState","Sort","List","ListItem","divider","align","CustomChip","toLocaleDateString","Table","TableHead","TableRow","TableCell","TableBody","IconButton","size","aria-label","Edit","DeleteForever","reduce","acc","v","props","setSortBy","setOrder","Select","labelId","MenuItem","valueId","setValueId","minWidth","multiple","input","renderValue","selected","BackgroundChip","Chip","ColorIcon","fontSize","ContextMenuProvider","children","initialState","mouseX","mouseY","setState","handleClose","onContextMenu","clientX","clientY","cursor","Menu","keepMounted","anchorReference","anchorPosition","top","left","undefined","colors","icons","EditAccount","editAccount","setColor","setIcon","setType","handleDelete","c","i","some","disabled","CategoryCard","CategoryIndex","EditCategory","editCategory","Home","App","fab","right","Fab","Add","pb","exact","path","ExpenseIndex","uiReducer","combineReducers","rootReducer","copy","store","preloadedState","dataRaw","localStorage","getItem","storeData","JSON","parse","storeDateFixed","forEach","storeVersion","setItem","createStore","createStoreBaseOnLocalStorage","subscribe","stringify","getState","configureStore","1345","1234","3576","1024","46","690","869","582","2456","648","2345","145","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.10c5238d.chunk.js","sourcesContent":["import { Account, Category, Expense } from \"../../types\";\n\nexport const ADD_EXPENSE = \"ADD_EXPENSE\"\nexport const OPEN_EDIT_ACCOUNT = \"OPEN_EDIT_ACCOUNT\"\nexport const OPEN_EDIT_CATEGORY = \"OPEN_EDIT_CATEGORY\"\n\nexport interface AddExpenseAction {\n  type: typeof ADD_EXPENSE\n  action: {\n    opened: boolean,\n    providedExpense?: Expense\n  }\n}\n\nexport function openAddExpense(providedExpense?: Expense): AddExpenseAction {\n  return {\n    type: ADD_EXPENSE,\n    action: {\n      opened: true,\n      providedExpense\n    }\n  }\n}\n\nexport function closeAddExpense(): AddExpenseAction {\n  return {\n    type: ADD_EXPENSE,\n    action: {\n      opened: false\n    }\n  }\n}\n\nexport interface EditAccountAction {\n  type: typeof OPEN_EDIT_ACCOUNT\n  action: {\n    opened: boolean,\n    providedAccount?: Account\n  }\n}\n\nexport function openEditAccount(providedAccount?: Account) {\n  return {\n    type: OPEN_EDIT_ACCOUNT,\n    action: {\n      opened: true,\n      providedAccount\n    }\n  }\n}\n\nexport function closeEditAccount() {\n  return {\n    type: OPEN_EDIT_ACCOUNT,\n    action: {\n      opened: false\n    }\n  }\n}\n\nexport interface EditCategoryAction {\n  type: typeof OPEN_EDIT_CATEGORY\n  action: {\n    opened: boolean,\n    providedCategory?: Category\n  }\n}\n\nexport function openEditCategory(providedCategory?: Category) {\n  return {\n    type: OPEN_EDIT_CATEGORY,\n    action: {\n      opened: true,\n      providedCategory\n    }\n  }\n}\n\nexport function closeEditCategory() {\n  return {\n    type: OPEN_EDIT_CATEGORY,\n    action: {\n      opened: false\n    }\n  }\n}\n\nexport type UIActionType = AddExpenseAction | EditAccountAction | EditCategoryAction\n","import React from \"react\";\nimport { Account } from \"../types\";\nimport { Card, CardContent, getContrastRatio, Typography } from \"@material-ui/core\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { useDispatch } from \"react-redux\";\nimport { openEditAccount } from \"../states/ui/uiActions\";\n\ninterface AccountProps {\n  account: Account\n}\n\nexport default function AccountCard({ account }: AccountProps) {\n\n  const dispatch = useDispatch()\n\n  const BankCard = styled(Card)({\n    background: account.color,\n    color: getContrastRatio(\"#000\", account.color) < 8 ? \"white\" : \"black\"\n  })\n\n  return (\n    <Grid item xs={12} md={6}>\n      <BankCard>\n        <CardActionArea onClick={() => dispatch(openEditAccount(account))}>\n          <CardContent>\n            <Grid container justify=\"space-between\" spacing={1}>\n              <Grid item xs={12}>\n                <Grid container alignItems=\"center\" spacing={1}>\n                  <Grid item>\n                    <Icon>{ account.icon }</Icon>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"h5\">\n                      { account.title }\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"subtitle2\">{ account.type }</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </CardActionArea>\n      </BankCard>\n    </Grid>\n  )\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../states/rootReducer\";\nimport React from \"react\";\nimport AccountCard from \"./AccountCard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from \"@material-ui/core\";\nimport { openEditAccount } from \"../states/ui/uiActions\";\n\nexport default function AccountIndex() {\n\n  const accounts = useSelector((state: RootState) => {\n    return state.accounts\n  })\n\n  const dispatch = useDispatch()\n\n  return (\n    <Box m={4}>\n      <Grid container spacing={ 2 } justify=\"space-between\">\n        <Grid item>\n          <Typography variant=\"h4\">Accounts</Typography>\n        </Grid>\n        <Grid item>\n          <Button color=\"primary\" variant=\"contained\" onClick={ () => dispatch(openEditAccount()) }>\n            New Account\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container spacing={ 2 }>\n        { Object.entries(accounts).map(([id, account]) => (\n          <AccountCard account={ account } key={ id } />\n        )) }\n      </Grid>\n    </Box>\n  )\n\n}\n","import React from \"react\";\n\nexport default function Overview() {\n  return (\n    <h1>Overview</h1>\n  )\n}\n","import { Account } from \"../../types\";\n\nexport const CREATE_ACCOUNT = \"CREATE_ACCOUNT\"\nexport const EDIT_ACCOUNT = \"EDIT_ACCOUNT\"\nexport const DELETE_ACCOUNT = \"DELETE_ACCOUNT\"\n\ninterface CreateAccountAction {\n  type: typeof CREATE_ACCOUNT\n  account: Account\n}\n\ninterface EditAccount {\n  type: typeof EDIT_ACCOUNT\n  account: Account\n}\n\ninterface DeleteAccount {\n  type: typeof DELETE_ACCOUNT\n  accountId: number\n}\n\nexport function createAccount(account: Account): CreateAccountAction {\n  return {\n    type: CREATE_ACCOUNT,\n    account\n  }\n}\n\nexport function editAccount(account: Account): EditAccount {\n  return {\n    type: EDIT_ACCOUNT,\n    account\n  }\n}\n\nexport function deleteAccount(accountId: number): DeleteAccount {\n  return {\n    type: DELETE_ACCOUNT,\n    accountId\n  }\n}\n\n\nexport type AccountActionTypes = CreateAccountAction | EditAccount | DeleteAccount\n","import { Expense, NewExpense } from \"../../types\";\n\nexport const CREATE_EXPENSE = \"CREATE_EXPENSE\"\nexport const EDIT_EXPENSE = \"EDIT_EXPENSE\"\nexport const DELETE_EXPENSE = \"DELETE_EXPENSE\"\n\ninterface CreateExpenseAction {\n  type: typeof CREATE_EXPENSE\n  expense: NewExpense\n}\n\ninterface EditExpense {\n  type: typeof EDIT_EXPENSE\n  expense: Expense\n}\n\ninterface DeleteExpense {\n  type: typeof DELETE_EXPENSE\n  expenseId: number\n}\n\nexport function createExpense(expense: NewExpense): CreateExpenseAction {\n  return {\n    type: CREATE_EXPENSE,\n    expense\n  }\n}\n\nexport function editExpense(expense: Expense): EditExpense {\n  return {\n    type: EDIT_EXPENSE,\n    expense\n  }\n}\n\nexport function deleteExpense(expenseId: number): DeleteExpense {\n  return {\n    type: DELETE_EXPENSE,\n    expenseId\n  }\n}\n\n\nexport type ExpenseActionTypes = CreateExpenseAction | EditExpense | DeleteExpense\n","import { Category } from \"../../types\";\n\nexport const CREATE_CATEGORY = \"CREATE_CATEGORY\"\nexport const EDIT_CATEGORY = \"EDIT_CATEGORY\"\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\"\n\ninterface CreateCategoryAction {\n  type: typeof CREATE_CATEGORY\n  category: Category\n}\n\ninterface EditCategory {\n  type: typeof EDIT_CATEGORY\n  category: Category\n}\n\ninterface DeleteCategory {\n  type: typeof DELETE_CATEGORY\n  categoryId: number\n}\n\nexport function createCategory(category: Category): CreateCategoryAction {\n  return {\n    type: CREATE_CATEGORY,\n    category\n  }\n}\n\nexport function editCategory(category: Category): EditCategory {\n  return {\n    type: EDIT_CATEGORY,\n    category\n  }\n}\n\nexport function deleteCategory(categoryId: number): DeleteCategory {\n  return {\n    type: DELETE_CATEGORY,\n    categoryId\n  }\n}\n\n\nexport type CategoryActionTypes = CreateCategoryAction | EditCategory | DeleteCategory\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../states/rootReducer\";\nimport { closeAddExpense } from \"../states/ui/uiActions\";\nimport { DialogContent } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete/Autocomplete\";\nimport { Account, Category as CategoryType } from \"../types\";\nimport { createAccount } from \"../states/account/accountActions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { createExpense, editExpense } from \"../states/expense/expenseActions\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { createCategory } from \"../states/category/categoryActions\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Box from \"@material-ui/core/Box/Box\";\n\n\nexport default function EditExpense() {\n\n  const { opened, providedExpense } = useSelector((state: RootState) => state.ui.addExpense)\n\n  const [title, setTitle] = useState(\"\")\n  const [amount, setAmount] = useState<number>(0)\n  const [account, setAccount] = useState<Account | null>(null)\n  const [category, setCategory] = useState<CategoryType | null>(null)\n  const [date, setDate] = useState<Date | null>(new Date(Date.now()))\n\n  const categories = useSelector((state: RootState) => state.categories)\n  const accounts = useSelector((state: RootState) => state.accounts)\n\n  useEffect(() => {\n    if (providedExpense) {\n      setTitle(providedExpense.title)\n      setAmount(providedExpense.amount)\n      setAccount(accounts[providedExpense.accountId])\n      setCategory(categories[providedExpense.categoryId])\n      setDate(providedExpense.date)\n    }\n  }, [providedExpense, accounts, categories])\n\n  const titleRef = useRef<HTMLDivElement | null>(null)\n\n  const dispatch = useDispatch()\n\n  function closeDialog() {\n    dispatch(closeAddExpense())\n  }\n\n  function resetFields() {\n    setTitle(\"\")\n    setAmount(0)\n    setAccount(null)\n    setCategory(null)\n    setDate(new Date(Date.now()))\n    titleRef.current?.focus()\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    handleSave(event)\n    resetFields()\n    if (providedExpense) closeDialog()\n  }\n\n  function handleSave(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    if (!date || !account || !category) return\n    if (providedExpense) {\n      dispatch(editExpense({\n        id: providedExpense.id,\n        accountId: account.id,\n        amount,\n        categoryId: category.id,\n        date,\n        title\n      }))\n    } else {\n      dispatch(createExpense({ accountId: account.id, amount, categoryId: category.id, date, title }))\n    }\n  }\n\n  return (\n    <Dialog open={ opened } onClose={ closeDialog }>\n      <Box p={ 1 }>\n        <form id=\"addExpenseForm\" onSubmit={ handleSubmit }>\n          <DialogTitle>{ providedExpense ? \"Edit\" : \"Add\" } Expense</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              id=\"expense-title\"\n              label=\"Title\"\n              value={ title }\n              onChange={ it => setTitle(it.target.value) }\n              type=\"text\"\n              fullWidth\n              required\n              ref={ titleRef }\n            />\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"standard-adornment-amount\">Amount</InputLabel>\n              <Input\n                id=\"standard-adornment-amount\"\n                value={ amount }\n                onChange={ it => setAmount(+(+(it.target.value) as number).toFixed(2)) }\n                type=\"number\"\n                inputProps={ { step: 0.01 } }\n                startAdornment={ <InputAdornment position=\"start\">$</InputAdornment> }\n                required\n              />\n            </FormControl>\n            <AccountSelector account={ account } setAccount={ setAccount } />\n            <CategorySelector category={ category } setCategory={ setCategory } />\n            <MuiPickersUtilsProvider utils={ DateFnsUtils }>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Date picker inline\"\n                value={ date }\n                onChange={ it => setDate(it) }\n                KeyboardButtonProps={ {\n                  'aria-label': 'change date',\n                } }\n                required\n              />\n            </MuiPickersUtilsProvider>\n\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={ closeDialog } color=\"default\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n              Submit\n            </Button>\n          </DialogActions>\n        </form>\n      </Box>\n    </Dialog>\n  )\n\n}\n\ninterface AccountSelectorProps {\n  account: Account | null\n  setAccount: React.Dispatch<React.SetStateAction<Account | null>>\n}\n\nfunction AccountSelector({ account, setAccount }: AccountSelectorProps) {\n\n  const dispatch = useDispatch()\n\n  const accounts = useSelector((state: RootState) => state.accounts)\n\n  type Option = { title: string, message?: string }\n\n  const filter = createFilterOptions<Option>();\n\n  return (\n    <Autocomplete\n      id=\"account-selector\"\n      value={ account }\n      options={ Object.values(accounts) as Option[] }\n      onChange={ (event, newValue) => {\n        if (newValue?.message) {\n          const account = {\n            id: Math.random(),\n            title: newValue.title,\n            color: \"#fff\",\n            icon: \"account_balance\",\n            type: \"\"\n          }\n          dispatch(createAccount(account))\n          setAccount(account)\n        } else if (newValue) {\n          setAccount(newValue as Account);\n        }\n      } }\n      filterOptions={ (options, params) => {\n        const filtered = filter(options, params);\n\n        // Suggest the creation of a new value\n        if (params.inputValue !== '') {\n          filtered.push({\n            message: `Add \"${ params.inputValue }\"`,\n            title: params.inputValue\n          });\n        }\n\n        return filtered;\n      } }\n      getOptionLabel={ (option) => option.message || option.title }\n      renderInput={ (params) => <TextField { ...params } label=\"Account\" /> }\n    />\n  )\n\n}\n\ninterface CategorySelectorProps {\n  category: CategoryType | null\n  setCategory: React.Dispatch<React.SetStateAction<CategoryType | null>>\n}\n\nfunction CategorySelector({ category, setCategory }: CategorySelectorProps) {\n\n  const dispatch = useDispatch()\n\n  const categories = useSelector((state: RootState) => state.categories)\n\n  type Option = { title: string, message?: string }\n\n  const filter = createFilterOptions<Option>();\n\n  return (\n    <Autocomplete\n      id=\"account-selector\"\n      value={ category }\n      options={ Object.values(categories) as Option[] }\n      onChange={ (event, newValue) => {\n        if (newValue?.message) {\n          const category = {\n            id: Math.random(),\n            title: newValue.title,\n            color: \"#fff\",\n            icon: \"account_balance_wallet\"\n          }\n          dispatch(createCategory(category))\n          setCategory(category)\n        } else if (newValue) {\n          setCategory(newValue as Account);\n        }\n      } }\n      filterOptions={ (options, params) => {\n        const filtered = filter(options, params);\n\n        // Suggest the creation of a new value\n        if (params.inputValue !== '') {\n          filtered.push({\n            message: `Add \"${ params.inputValue }\"`,\n            title: params.inputValue\n          });\n        }\n\n        return filtered;\n      } }\n      getOptionLabel={ (option) => option.message || option.title }\n      renderInput={ (params) => <TextField { ...params } label=\"Category\" /> }\n    />\n  )\n\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#34a007',\n    },\n    secondary: {\n      main: '#e23500',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#ffffff',\n    },\n  },\n});\n\nexport default theme;\n","import React from \"react\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport theme from \"../styles/theme\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport { AppBar, Container, createStyles, makeStyles } from \"@material-ui/core\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tab from \"@material-ui/core/Tab\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport { AccountBalance, BarChart, Category, Receipt } from \"@material-ui/icons\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\n\nexport default function Nav() {\n\n  const isPhone = useMediaQuery(theme.breakpoints.down('sm'));\n\n  const location = useLocation();\n  const history = useHistory();\n\n  const setTab = (event: React.ChangeEvent<{}>, newValue: string) => {\n    history.push(newValue)\n  };\n\n  function tabProps(index: string) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  const useStyles = makeStyles(theme =>\n    createStyles({\n      bottomNav: {\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n        background: \"#f0f0f0\",\n        zIndex: 5\n      }\n    }),\n  );\n\n  const classes = useStyles();\n\n  function pickNav() {\n    if (isPhone) {\n      return (\n        <>\n          <AppBar position=\"sticky\">\n            <Container maxWidth=\"lg\">\n              <Toolbar>\n                <Typography variant=\"h6\">MBET</Typography>\n              </Toolbar>\n            </Container>\n          </AppBar>\n          <BottomNavigation value={ location.pathname } onChange={ setTab } className={ classes.bottomNav }>\n            <BottomNavigationAction label=\"Overview\" value=\"/overview\" icon={ <BarChart /> } />\n            <BottomNavigationAction label=\"Accounts\" value=\"/accounts\" icon={ <AccountBalance /> } />\n            <BottomNavigationAction label=\"Categories\" value=\"/categories\" icon={ <Category /> } />\n            <BottomNavigationAction label=\"Expenses\" value=\"/expenses\" icon={ <Receipt /> } />\n          </BottomNavigation>\n        </>\n      )\n    } else {\n      return (\n        <AppBar position=\"static\">\n          <Container maxWidth=\"lg\">\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Typography variant=\"h6\">MBET</Typography>\n              <Tabs value={ location.pathname } onChange={ setTab }>\n                <Tab component={ Link } to=\"/overview\" label=\"Overview\" { ...tabProps(\"/overview\") } />\n                <Tab component={ Link } to=\"/accounts\" label=\"Accounts\" { ...tabProps(\"/accounts\") } />\n                <Tab component={ Link } to=\"/categories\" label=\"Categories\" { ...tabProps(\"/categories\") } />\n                <Tab component={ Link } to=\"/expenses\" label=\"Expenses\" { ...tabProps(\"/expenses\") } />\n              </Tabs>\n            </Grid>\n          </Container>\n        </AppBar>\n      )\n    }\n  }\n\n  return pickNav()\n\n}\n","import React, { FC, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../states/rootReducer\";\nimport { Chip, getContrastRatio, IconButton, Table } from \"@material-ui/core\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport { Account, Category, Expense } from \"../types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport theme from \"../styles/theme\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { deleteExpense } from \"../states/expense/expenseActions\";\nimport { openAddExpense } from \"../states/ui/uiActions\";\nimport { DeleteForever, Edit } from \"@material-ui/icons\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\n\nexport default function () {\n\n  const expenses = useSelector((state: RootState) => state.expenses)\n  const accounts = useSelector((state: RootState) => state.accounts)\n  const categories = useSelector((state: RootState) => state.categories)\n\n  const [expenseValues, setExpenseValues] = useState(Object.values(expenses))\n\n  const accountFilterState = useState<number[]>([])\n  const categoryFilterState = useState<number[]>([])\n\n  const [startDate, setStartDate] = useState<Date | null>(null)\n  const [endDate, setEndDate] = useState<Date | null>(null)\n\n  const sortByState = useState<keyof Expense>(\"date\")\n  const orderState = useState<\"asc\" | \"desc\">(\"desc\")\n\n  const [accountFilters] = accountFilterState\n  const [categoryFilters] = categoryFilterState\n\n  const [sortBy] = sortByState\n  const [order] = orderState\n\n  useEffect(() => {\n\n    const dateUtils = new DateFnsUtils()\n\n    setExpenseValues(Object.values(expenses).filter(it => {\n      if (accountFilters.length > 0 && !accountFilters.includes(it.accountId)) {\n        return false\n      }\n      if (categoryFilters.length > 0 && !categoryFilters.includes(it.categoryId)) {\n        return false\n      }\n      if (startDate && dateUtils.isBefore(it.date, startDate)) {\n        return false\n      }\n      if (endDate && dateUtils.isAfter(it.date, endDate)) {\n        return false\n      }\n      return true\n    }).sort((a, b) => {\n\n      function comparator(str1: any, str2: any) {\n        if (str1 < str2)\n          return -1;\n        if (str1 > str2)\n          return 1;\n        return 0;\n      }\n\n      let aValue = a[sortBy]\n      let bValue = b[sortBy]\n\n      if (sortBy === \"accountId\") {\n        aValue = accounts[aValue as number].title\n        bValue = accounts[bValue as number].title\n      } else if (sortBy === \"categoryId\") {\n        aValue = categories[aValue as number].title\n        bValue = categories[bValue as number].title\n      }\n\n      if (order === \"asc\") {\n        return comparator(aValue, bValue)\n      } else {\n        return -comparator(aValue, bValue)\n      }\n\n    }))\n  }, [accountFilters, categoryFilters, sortBy, order, expenses, startDate, endDate, accounts, categories])\n\n  const dispatch = useDispatch()\n\n  const handleDelete = (expenseId: number) => () => {\n    dispatch(deleteExpense(expenseId))\n  }\n\n  const handleEdit = (expense: Expense) => () => {\n    dispatch(openAddExpense(expense))\n  }\n\n  const isPhone = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function renderBaseOnEmpty() {\n\n    function renderBaseOnScreenSize() {\n      if (isPhone) {\n        return (\n          <List>\n            { expenseValues.map(expense => (\n              <ContextMenuProvider expense={ expense }>\n                <ListItem divider>\n                  <Grid container spacing={ 1 }>\n                    <Grid item xs={ 12 }>\n                      <Grid container justify=\"space-between\" alignItems=\"baseline\">\n                        <Grid item xs={ 9 }>\n                          <Typography variant=\"h5\">{ expense.title }</Typography>\n                        </Grid>\n                        <Grid item xs={ 3 }>\n                          <Typography variant=\"h6\" align=\"right\">${ expense.amount.toFixed(2) }</Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid item xs={ 12 }>\n                      <Grid container spacing={ 2 } alignItems=\"center\">\n                        <Grid item xs={ 9 }>\n                          <Grid container spacing={ 1 }>\n                            <Grid item>\n                              <CustomChip value={ accounts[expense.accountId] } />\n                            </Grid>\n                            <Grid item>\n                              <CustomChip value={ categories[expense.categoryId] } />\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                        <Grid item xs={ 3 }>\n                          <Typography variant=\"subtitle2\"\n                                      align=\"right\">{ expense.date.toLocaleDateString() }</Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </ListItem>\n              </ContextMenuProvider>\n            )) }\n          </List>\n        )\n      } else {\n        return (\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Title</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Account</TableCell>\n                <TableCell>Category</TableCell>\n                <TableCell>Amount</TableCell>\n                <TableCell>Edit</TableCell>\n                <TableCell>Delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              { expenseValues.map(expense => (\n                <TableRow>\n                  <TableCell>{ expense.title }</TableCell>\n                  <TableCell>{ expense.date.toLocaleDateString() }</TableCell>\n                  <TableCell><CustomChip value={ accounts[expense.accountId] } /></TableCell>\n                  <TableCell><CustomChip value={ categories[expense.categoryId] } /></TableCell>\n                  <TableCell>${ expense.amount.toFixed(2) }</TableCell>\n                  <TableCell>\n                    <IconButton color=\"primary\" size=\"small\" aria-label={ `edit expense ${ expense.title }` }\n                                component=\"span\" onClick={ handleEdit(expense) }>\n                      <Edit />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell>\n                    <IconButton color=\"secondary\" size=\"small\" aria-label={ `delete expense ${ expense.title }` }\n                                component=\"span\" onClick={ handleDelete(expense.id) }>\n                      <DeleteForever />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              )) }\n            </TableBody>\n          </Table>\n        )\n      }\n    }\n\n    if (expenseValues.length === 0) {\n      return (\n        <Grid container justify=\"center\">\n          <Grid item>\n            <Typography variant=\"h4\">\n              Empty\n            </Typography>\n          </Grid>\n        </Grid>\n      )\n    } else {\n      return (\n        <>\n          { renderBaseOnScreenSize() }\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Typography variant=\"h6\">\n                { `Total: $${expenseValues.map(it => it.amount).reduce((acc, v) => acc + v, 0).toFixed(2)}` }\n              </Typography>\n            </Grid>\n          </Grid>\n        </>\n      )\n    }\n  }\n\n  return (\n    <Box my={ 4 }>\n      <Paper elevation={ 0 } style={ {\n        background: \"#efefef\"\n      } }>\n        <Box p={ 2 }>\n          <Typography variant=\"h6\">Filters</Typography>\n          <Grid container spacing={ 2 }>\n            <Grid item xs={ 12 } md={ 6 }>\n              <Filter values={ accounts } label=\"Account\" valueState={ accountFilterState } />\n            </Grid>\n            <Grid item xs={ 12 } md={ 6 }>\n              <Filter values={ categories } label=\"Category\" valueState={ categoryFilterState } />\n            </Grid>\n          </Grid>\n          <MuiPickersUtilsProvider utils={ DateFnsUtils }>\n          <Grid container spacing={ 2 }>\n            <Grid item xs={ 12 } md={ 6 }>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Start Date\"\n                value={ startDate }\n                onChange={ it => setStartDate(it) }\n                KeyboardButtonProps={ {\n                  'aria-label': 'set start date',\n                } }\n                style={ { width: \"100%\" } }\n              />\n            </Grid>\n            <Grid item xs={ 12 } md={ 6 }>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"End Date\"\n                value={ endDate }\n                onChange={ it => setEndDate(it) }\n                KeyboardButtonProps={ {\n                  'aria-label': 'set end date',\n                } }\n                style={ { width: \"100%\" } }\n              />\n            </Grid>\n          </Grid>\n          </MuiPickersUtilsProvider>\n          <Sort options={ [\"title\", \"date\", \"account\", \"category\", \"amount\"] } sortByState={ sortByState }\n                orderState={ orderState } />\n        </Box>\n      </Paper>\n      { renderBaseOnEmpty() }\n    </Box>\n  )\n}\n\ninterface SortProps {\n  options: string[]\n  sortByState: any // [string, Dispatch<SetStateAction<string>>]\n  orderState: any // [\"asc\" | \"desc\", Dispatch<SetStateAction<\"asc\" | \"desc\">>]\n}\n\nfunction Sort(props: SortProps) {\n\n  const { options } = props;\n\n  const [sortBy, setSortBy] = props.sortByState\n  const [order, setOrder] = props.orderState\n\n  return (\n    <Grid container spacing={ 2 }>\n      <Grid item xs={ 12 } md={ 6 }>\n        <FormControl style={ { width: \"100%\" } }>\n          <InputLabel id={ `sortLabel` }>Sort By</InputLabel>\n          <Select\n            labelId={ `sortLabel` }\n            id={ `sort` }\n            value={ sortBy }\n            onChange={ it => setSortBy(it.target.value) }\n          >\n            { Object.values(options).map(value => (\n              <MenuItem value={ value }>{ value }</MenuItem>\n            )) }\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={ 12 } md={ 6 }>\n        <FormControl style={ { width: \"100%\" } }>\n          <InputLabel id={ `orderLabel` }>Order</InputLabel>\n          <Select\n            labelId={ `orderLabel` }\n            id={ `order` }\n            value={ order }\n            onChange={ it => setOrder(it.target.value) }\n          >\n            <MenuItem value=\"asc\">Ascending</MenuItem>\n            <MenuItem value=\"desc\">Descending</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n    </Grid>\n  )\n\n}\n\ninterface FilterProps {\n  values: Record<number, Account | Category>\n  label: string\n  valueState: any // [number[], Dispatch<SetStateAction<number[]>>]\n}\n\nfunction Filter(props: FilterProps) {\n\n  const { values, label } = props;\n\n  const [valueId, setValueId] = props.valueState\n\n  return (\n    <FormControl style={ { minWidth: \"100%\" } }>\n      <InputLabel id={ `filter${ label }Label` }>{ label }</InputLabel>\n      <Select\n        labelId={ `filter${ label }Label` }\n        id={ `filter${ label }` }\n        multiple\n        value={ valueId }\n        onChange={ it => setValueId(it.target.value as number[]) }\n        input={ <Input id={ `selectMultiple${ label }` } /> }\n        renderValue={ (selected) => (\n          <Grid container spacing={ 1 }>\n            { (selected as number[]).map((valueId) => (\n              <Grid item>\n                <CustomChip value={ values[valueId] } />\n              </Grid>\n            )) }\n          </Grid>\n        ) }\n      >\n        { Object.values(values).map((value) => (\n          <MenuItem key={ value.id } value={ value.id }>\n            <CustomChip value={ value } />\n          </MenuItem>\n        )) }\n      </Select>\n    </FormControl>\n  )\n\n}\n\ninterface CustomChipProps {\n  value: Account | Category\n}\n\nfunction CustomChip({ value }: CustomChipProps) {\n\n  const BackgroundChip = styled(Chip)({\n    background: value.color,\n    color: getContrastRatio(\"#000\", value.color) < 8 ? \"white\" : \"black\"\n  })\n\n  const ColorIcon = styled(Icon)({\n    color: getContrastRatio(\"#000\", value.color) < 8 ? \"white\" : \"black\"\n  })\n\n  return (\n    <BackgroundChip size=\"small\" label={ value.title }\n                    icon={ <ColorIcon fontSize=\"small\">{ value.icon }</ColorIcon> } />\n  )\n\n}\n\nconst ContextMenuProvider: FC<{ expense: Expense }> = ({ children, expense }) => {\n\n  const dispatch = useDispatch()\n\n  const initialState = {\n    mouseX: null,\n    mouseY: null,\n  };\n\n  const [state, setState] = useState<{\n    mouseX: null | number;\n    mouseY: null | number;\n  }>(initialState);\n\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    setState({\n      mouseX: event.clientX - 2,\n      mouseY: event.clientY - 4,\n    });\n  };\n\n  const handleClose = () => {\n    setState(initialState);\n  };\n\n  const handleDelete = (expenseId: number) => () => {\n    dispatch(deleteExpense(expenseId))\n    handleClose()\n  }\n\n  const handleEdit = (expense: Expense) => () => {\n    dispatch(openAddExpense(expense))\n    handleClose()\n  }\n\n  return (\n    <div onContextMenu={ handleClick } style={ { cursor: 'context-menu' } }>\n      { children }\n      <Menu\n        keepMounted\n        open={ state.mouseY !== null }\n        onClose={ handleClose }\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          state.mouseY !== null && state.mouseX !== null\n            ? { top: state.mouseY, left: state.mouseX }\n            : undefined\n        }\n      >\n        <MenuItem onClick={ handleEdit(expense) }><Edit />Edit</MenuItem>\n        <MenuItem onClick={ handleDelete(expense.id) }><DeleteForever />Delete</MenuItem>\n      </Menu>\n    </div>\n  )\n\n}\n","export interface Account {\n  id: number\n  title: string\n  color: string\n  icon: string\n  type: string\n}\n\nexport type NewAccount = Omit<Account, \"id\">\n\nexport interface Category {\n  id: number\n  title: string\n  color: string\n  icon: string\n}\n\nexport type NewCategory = Omit<Category, \"id\">\n\nexport interface Expense {\n  id: number\n  title: string\n  amount: number\n  date: Date\n  accountId: number\n  categoryId: number\n}\n\nexport type NewExpense = Omit<Expense, \"id\">\n\n// https://casesandberg.github.io/react-color/\nexport const colors = [\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#1776d7\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#3e951b\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n  \"#795548\",\n  \"#607d8b\",\n  \"#000000\"\n]\n\nexport const icons = [\n  \"account_balance\",\n  \"access_time\",\n  \"audiotrack\",\n  \"attachment\",\n  \"book\",\n  \"build\",\n  \"check\",\n  \"clear\",\n  \"cloud\",\n  \"create\",\n  \"directions_bus\",\n  \"directions_car\",\n  \"flight_takeoff\",\n  \"kitchen\",\n  \"laptop_mac\",\n  \"local_parking\",\n  \"local_pizza\",\n  \"location_on\",\n  \"music_note\",\n  \"navigation\",\n  \"payment\",\n  \"person\",\n  \"pets\",\n  \"phone_android\",\n  \"poll\",\n  \"print\",\n  \"sim_card\",\n  \"star\",\n  \"videogame_asset\",\n  \"visibility\",\n  \"work\"\n]\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../states/rootReducer\";\nimport { closeEditAccount } from \"../states/ui/uiActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Box from \"@material-ui/core/Box/Box\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React, { useEffect, useState } from \"react\";\nimport { createAccount, editAccount } from \"../states/account/accountActions\";\nimport { DialogContent } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { colors, icons } from \"../types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { deleteCategory } from \"../states/category/categoryActions\";\n\n\nexport default function EditAccount() {\n\n  const { opened, providedAccount } = useSelector((state: RootState) => state.ui.editAccount)\n\n  const expense = useSelector((state: RootState) => state.expenses)\n\n  const [title, setTitle] = useState(\"\")\n  const [color, setColor] = useState(\"#fff\")\n  const [icon, setIcon] = useState(\"account_balance\")\n  const [type, setType] = useState(\"\")\n\n  const dispatch = useDispatch()\n\n  function closeDialog() {\n    dispatch(closeEditAccount())\n  }\n\n  useEffect(() => {\n    if (providedAccount) {\n      const { title, color, icon, type } = providedAccount\n      setTitle(title)\n      setColor(color)\n      setIcon(icon)\n      setType(type)\n    } else {\n      resetFields()\n    }\n  }, [providedAccount])\n\n  function resetFields() {\n    setTitle(\"\")\n    setColor(\"#fff\")\n    setIcon(\"account_balance\")\n    setType(\"\")\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    handleSave(event)\n    resetFields()\n    if (providedAccount) closeDialog()\n  }\n\n  function handleSave(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    if (!title || !color || !icon || !type) return\n    if (providedAccount) {\n      dispatch(editAccount({\n        id: providedAccount.id,\n        title,\n        color,\n        icon,\n        type\n      }))\n    } else {\n      dispatch(createAccount({\n        id: Math.random(),\n        title,\n        color,\n        icon,\n        type\n      }))\n    }\n  }\n\n  function handleDelete() {\n    dispatch(deleteCategory(providedAccount!!.id))\n    closeDialog()\n  }\n\n  function deleteButton() {\n    if (providedAccount) {\n      if (Object.values(expense).some(it => it.accountId === providedAccount.id)) {\n        return (\n          <Tooltip title=\"There are still expenses using this category, please delete them first\">\n            <span>\n              <Button color=\"secondary\" disabled>\n                Delete\n              </Button>\n            </span>\n          </Tooltip>\n        )\n      } else {\n        return (\n          <Button onClick={ handleDelete } color=\"secondary\">\n            Delete\n          </Button>\n        )\n      }\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Dialog open={ opened } onClose={ closeDialog }>\n      <Box p={ 1 }>\n        <form id=\"addExpenseForm\" onSubmit={ handleSubmit }>\n          <DialogTitle>{ providedAccount ? \"Edit\" : \"Add\" } Account</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              id=\"expense-title\"\n              label=\"Title\"\n              value={ title }\n              onChange={ it => setTitle(it.target.value) }\n              type=\"text\"\n              fullWidth\n              required\n            />\n            <FormControl fullWidth>\n              <InputLabel id=\"account-color\">Color</InputLabel>\n              <Select\n                labelId=\"account-color\"\n                id=\"account-color-select\"\n                value={ color }\n                onChange={ it => setColor(it.target.value as string)}\n              >\n                { colors.map(c => (\n                  <MenuItem value={c}>\n                    <Typography style={{ color: c }}>\n                      { c }\n                    </Typography>\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel id=\"account-icon\">Icon</InputLabel>\n              <Select\n                labelId=\"account-icon\"\n                id=\"account-icon-select\"\n                value={ icon }\n                onChange={ it => setIcon(it.target.value as string)}\n              >\n                { icons.map(i => (\n                  <MenuItem value={ i }>\n                    <Grid container spacing={1} alignItems=\"center\">\n                      <Grid item><Icon fontSize=\"small\">{ i }</Icon></Grid>\n                      <Grid item>{ i }</Grid>\n                    </Grid>\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <TextField\n              autoFocus\n              id=\"expense-type\"\n              label=\"Type\"\n              value={ type }\n              onChange={ it => setType(it.target.value) }\n              type=\"text\"\n              fullWidth\n              required\n            />\n          </DialogContent>\n          <DialogActions>\n            { deleteButton() }\n            <Button onClick={ closeDialog } color=\"default\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n              Submit\n            </Button>\n          </DialogActions>\n        </form>\n      </Box>\n    </Dialog>\n  )\n\n}\n","import React from \"react\";\nimport { Category } from \"../types\";\nimport { Card, CardContent, getContrastRatio, Typography } from \"@material-ui/core\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"@material-ui/core/styles/styled\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { useDispatch } from \"react-redux\";\nimport { openEditCategory } from \"../states/ui/uiActions\";\n\ninterface CategoryProps {\n  category: Category\n}\n\nexport default function CategoryCard({ category }: CategoryProps) {\n\n  const dispatch = useDispatch()\n\n  const BankCard = styled(Card)({\n    background: category.color,\n    color: getContrastRatio(\"#000\", category.color) < 8 ? \"white\" : \"black\"\n  })\n\n  return (\n    <Grid item xs={12} md={6}>\n      <BankCard>\n        <CardActionArea onClick={() => dispatch(openEditCategory(category))}>\n          <CardContent>\n            <Grid container justify=\"space-between\" spacing={1}>\n              <Grid item xs={12}>\n                <Grid container alignItems=\"center\" spacing={1}>\n                  <Grid item>\n                    <Icon>{ category.icon }</Icon>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"h5\">\n                      { category.title }\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </CardActionArea>\n      </BankCard>\n    </Grid>\n  )\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../states/rootReducer\";\nimport React from \"react\";\nimport CategoryCard from \"./CategoryCard\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Button } from \"@material-ui/core\";\nimport { openEditCategory } from \"../states/ui/uiActions\";\n\nexport default function CategoryIndex() {\n\n  const categories = useSelector((state: RootState) => {\n    return state.categories\n  })\n\n  const dispatch = useDispatch()\n\n  return (\n    <Box m={4}>\n      <Grid container spacing={ 2 } justify=\"space-between\">\n        <Grid item>\n          <Typography variant=\"h4\">Categories</Typography>\n        </Grid>\n        <Grid item>\n          <Button color=\"primary\" variant=\"contained\" onClick={ () => dispatch(openEditCategory()) }>\n            New Category\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container spacing={ 2 }>\n        { Object.entries(categories).map(([id, category]) => (\n          <CategoryCard category={ category } key={ id } />\n        )) }\n      </Grid>\n    </Box>\n  )\n\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../states/rootReducer\";\nimport { closeEditCategory } from \"../states/ui/uiActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Box from \"@material-ui/core/Box/Box\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport React, { useEffect, useState } from \"react\";\nimport { createCategory, deleteCategory, editCategory } from \"../states/category/categoryActions\";\nimport { DialogContent } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { colors, icons } from \"../types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Grid from \"@material-ui/core/Grid\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\n\nexport default function EditCategory() {\n\n  const { opened, providedCategory } = useSelector((state: RootState) => state.ui.editCategory)\n\n  const expense = useSelector((state: RootState) => state.expenses)\n\n  const [title, setTitle] = useState(\"\")\n  const [color, setColor] = useState(\"#fff\")\n  const [icon, setIcon] = useState(\"category_balance\")\n\n  const dispatch = useDispatch()\n\n  function closeDialog() {\n    dispatch(closeEditCategory())\n  }\n\n  useEffect(() => {\n    if (providedCategory) {\n      const { title, color, icon } = providedCategory\n      setTitle(title)\n      setColor(color)\n      setIcon(icon)\n    } else {\n      resetFields()\n    }\n  }, [providedCategory])\n\n  function resetFields() {\n    setTitle(\"\")\n    setColor(\"#fff\")\n    setIcon(\"category_balance\")\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    handleSave(event)\n    resetFields()\n    if (providedCategory) closeDialog()\n  }\n\n  function handleSave(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n    if (!title || !color || !icon) return\n    if (providedCategory) {\n      dispatch(editCategory({\n        id: providedCategory.id,\n        title,\n        color,\n        icon\n      }))\n    } else {\n      dispatch(createCategory({\n        id: Math.random(),\n        title,\n        color,\n        icon\n      }))\n    }\n  }\n\n  function handleDelete() {\n    dispatch(deleteCategory(providedCategory!!.id))\n    closeDialog()\n  }\n\n  function deleteButton() {\n    if (providedCategory) {\n      if (Object.values(expense).some(it => it.categoryId === providedCategory.id)) {\n        return (\n          <Tooltip title=\"There are still expenses using this category, please delete them first\">\n            <span>\n              <Button color=\"secondary\" disabled>\n                Delete\n              </Button>\n            </span>\n          </Tooltip>\n        )\n      } else {\n        return (\n          <Button onClick={ handleDelete } color=\"secondary\">\n            Delete\n          </Button>\n        )\n      }\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <Dialog open={ opened } onClose={ closeDialog }>\n      <Box p={ 1 }>\n        <form id=\"addExpenseForm\" onSubmit={ handleSubmit }>\n          <DialogTitle>{ providedCategory ? \"Edit\" : \"Add\" } Category</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              id=\"expense-title\"\n              label=\"Title\"\n              value={ title }\n              onChange={ it => setTitle(it.target.value) }\n              type=\"text\"\n              fullWidth\n              required\n            />\n            <FormControl fullWidth>\n              <InputLabel id=\"category-color\">Color</InputLabel>\n              <Select\n                labelId=\"category-color\"\n                id=\"category-color-select\"\n                value={ color }\n                onChange={ it => setColor(it.target.value as string) }\n              >\n                { colors.map(c => (\n                  <MenuItem value={ c }>\n                    <Typography style={ { color: c } }>\n                      { c }\n                    </Typography>\n                  </MenuItem>\n                )) }\n              </Select>\n            </FormControl>\n            <FormControl fullWidth>\n              <InputLabel id=\"category-icon\">Icon</InputLabel>\n              <Select\n                labelId=\"category-icon\"\n                id=\"category-icon-select\"\n                value={ icon }\n                onChange={ it => setIcon(it.target.value as string) }\n              >\n                { icons.map(i => (\n                  <MenuItem value={ i }>\n                    <Grid container spacing={ 1 } alignItems=\"center\">\n                      <Grid item><Icon fontSize=\"small\">{ i }</Icon></Grid>\n                      <Grid item>{ i }</Grid>\n                    </Grid>\n                  </MenuItem>\n                )) }\n              </Select>\n            </FormControl>\n          </DialogContent>\n          <DialogActions>\n            { deleteButton() }\n            <Button onClick={ closeDialog } color=\"default\">\n              Cancel\n            </Button>\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\">\n              Submit\n            </Button>\n          </DialogActions>\n        </form>\n      </Box>\n    </Dialog>\n  )\n\n}\n","import { Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default function Home() {\n  return (\n    <Box m={4}>\n      <Typography variant=\"h4\">\n        Instruction for now\n      </Typography>\n      <Typography>\n        Click on \"expenses\" to see demo expenses.\n        Click on the green button at the bottom right to start adding expense.\n      </Typography>\n    </Box>\n  )\n}\n","import React from 'react'\nimport './styles/index.scss'\nimport AccountIndex from \"./components/AccountIndex\";\nimport { Container, createStyles, makeStyles } from \"@material-ui/core\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Overview from \"./components/Overview\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Add } from \"@material-ui/icons\";\nimport EditExpense from \"./components/EditExpense\";\nimport { useDispatch } from \"react-redux\";\nimport { openAddExpense } from \"./states/ui/uiActions\";\nimport Nav from \"./components/Nav\";\nimport ExpenseIndex from \"./components/ExpenseIndex\";\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport EditAccount from \"./components/EditAccount\";\nimport CategoryIndex from \"./components/CategoryIndex\";\nimport EditCategory from \"./components/EditCategory\";\nimport Box from \"@material-ui/core/Box\";\nimport Home from \"./components/Home\";\n\nfunction App() {\n\n  const useStyles = makeStyles(theme =>\n    createStyles({\n      fab: {\n        position: 'fixed',\n        bottom: theme.spacing(12),\n        right: theme.spacing(4),\n        zIndex: 5\n      }\n    }),\n  );\n\n  const classes = useStyles();\n\n  const dispatch = useDispatch()\n\n  function openAddExpenseDialog() {\n    dispatch(openAddExpense())\n  }\n\n  return (\n\n    <Router>\n      <EditExpense />\n      <EditAccount />\n      <EditCategory />\n      <Nav />\n      <Tooltip title=\"Add new expense (ctrl+N)\">\n        <Fab color=\"primary\" aria-label=\"add\" className={ classes.fab } onClick={ openAddExpenseDialog }>\n          <Add />\n        </Fab>\n      </Tooltip>\n      <Container maxWidth=\"lg\">\n        <Box pb={20}>\n          <Switch>\n            <Route exact path=\"/overview\" component={ Overview } />\n            <Route exact path=\"/accounts\" component={ AccountIndex } />\n            <Route exact path=\"/categories\" component={ CategoryIndex } />\n            <Route exact path=\"/expenses\" component={ ExpenseIndex } />\n            <Route path=\"/\" component={ Home } />\n          </Switch>\n        </Box>\n      </Container>\n    </Router>\n\n  )\n}\n\nexport default App\n","import { AddExpenseAction, EditAccountAction, EditCategoryAction } from \"./uiActions\";\nimport { combineReducers } from \"redux\";\nimport { Account, Category, Expense } from \"../../types\";\n\nfunction addExpenseReducer(\n  state: { opened: boolean, providedExpense?: Expense } = { opened: false },\n  action: AddExpenseAction\n) {\n  if (action.type === \"ADD_EXPENSE\") {\n    return action.action\n  } else {\n    return state\n  }\n}\n\nfunction editAccountReducer(\n  state: { opened: boolean, providedAccount?: Account } = { opened: false },\n  action: EditAccountAction\n): { opened: boolean, providedAccount?: Account} {\n  if (action.type === \"OPEN_EDIT_ACCOUNT\") {\n    return action.action\n  } else {\n    return state\n  }\n}\n\nfunction editCategoryReducer(\n  state: { opened: boolean, providedCategory?: Category } = { opened: false },\n  action: EditCategoryAction\n): { opened: boolean, providedCategory?: Category } {\n  if (action.type === \"OPEN_EDIT_CATEGORY\") {\n    return action.action\n  } else {\n    return state\n  }\n}\n\nconst uiReducer = combineReducers({\n  addExpense: addExpenseReducer,\n  editAccount: editAccountReducer,\n  editCategory: editCategoryReducer\n})\n\nexport default uiReducer\n","import { combineReducers } from \"redux\";\nimport accountReducer from \"./account/accountReducer\";\nimport categoryReducer from \"./category/categoryReducer\";\nimport expenseReducer from \"./expense/expenseReducer\";\nimport uiReducer from \"./ui/uiReducer\";\n\nexport const rootReducer = combineReducers({\n  accounts: accountReducer,\n  categories: categoryReducer,\n  expenses: expenseReducer,\n  ui: uiReducer\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\n\n","import { AccountActionTypes } from \"./accountActions\";\nimport { Account } from \"../../types\";\n\nexport default function (state: Record<number, Account> = {}, action: AccountActionTypes): Record<number, Account> {\n  switch (action.type) {\n    case \"CREATE_ACCOUNT\":\n    case \"EDIT_ACCOUNT\":\n      return { ...state, [action.account.id]: action.account }\n    case \"DELETE_ACCOUNT\":\n      const copy = { ...state }\n      delete copy[action.accountId]\n      return copy\n    default:\n      return state\n  }\n}\n","import { Category } from \"../../types\";\nimport { CategoryActionTypes } from \"./categoryActions\";\n\nexport default function (state: Record<number, Category> = {}, action: CategoryActionTypes): Record<number, Category> {\n  switch (action.type) {\n    case \"CREATE_CATEGORY\":\n    case \"EDIT_CATEGORY\":\n      return { ...state, [action.category.id]: action.category }\n    case \"DELETE_CATEGORY\":\n      const copy = { ...state }\n      delete copy[action.categoryId]\n      return copy\n    default:\n      return state\n  }\n}\n","import { Expense } from \"../../types\";\nimport { ExpenseActionTypes } from \"./expenseActions\";\n\nexport default function (state: Record<number, Expense> = {}, action: ExpenseActionTypes): Record<number, Expense> {\n  switch (action.type) {\n    case \"CREATE_EXPENSE\":\n      const id = Math.random()\n      return { ...state, [id]: { ...action.expense, id } }\n    case \"EDIT_EXPENSE\":\n      return { ...state, [action.expense.id]: action.expense }\n    case \"DELETE_EXPENSE\":\n      const copy = { ...state }\n      delete copy[action.expenseId]\n      return copy\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./states/store\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from \"@material-ui/core\";\nimport theme from \"./styles/theme\";\n\nconst store = configureStore({\n  accounts: {\n    1345: {\n      id: 1345,\n      title: \"BankBank\",\n      color: \"#000\",\n      icon: \"account_balance\",\n      type: \"saving\"\n    },\n    1234: {\n      id: 1234,\n      title: \"Bank of the Bank\",\n      color: \"#1776d7\",\n      icon: \"star\",\n      type: \"checking\"\n    },\n    3576: {\n      id: 3576,\n      title: \"Bank of the Fish\",\n      color: \"#009688\",\n      icon: \"navigation\",\n      type: \"credit\"\n    }\n  },\n  categories: {\n    1024: {\n      id: 1024,\n      title: \"Food\",\n      color: \"#ffc107\",\n      icon: \"local_pizza\"\n    },\n    46: {\n      id: 46,\n      title: \"Server\",\n      color: \"#673ab7\",\n      icon: \"cloud\"\n    },\n    690: {\n      id: 690,\n      title: \"Cat\",\n      color: \"#3e951b\",\n      icon: \"pets\"\n    },\n    869: {\n      id: 869,\n      title: \"Travel\",\n      color: \"#f44336\",\n      icon: \"flight_takeoff\"\n    }\n  },\n  expenses: {\n    582: {\n      id: 582,\n      title: \"Unagi\",\n      amount: 10.24,\n      accountId: 1234,\n      categoryId: 1024,\n      date: new Date(\"2020-02-02\")\n    },\n    2456: {\n      id: 2456,\n      title: \"Cat food\",\n      amount: 20.48,\n      accountId: 1345,\n      categoryId: 690,\n      date: new Date(\"2020-09-24\")\n    },\n    648: {\n      id: 648,\n      title: \"AWS\",\n      amount: 40.96,\n      accountId: 3576,\n      categoryId: 46,\n      date: new Date(\"2020-06-24\")\n    },\n    3576: {\n      id: 3576,\n      title: \"AWS\",\n      amount: 30.72,\n      accountId: 3576,\n      categoryId: 46,\n      date: new Date(\"2020-07-24\")\n    },\n    2345: {\n      id: 2345,\n      title: \"AWS\",\n      amount: 655.36,\n      accountId: 3576,\n      categoryId: 46,\n      date: new Date(\"2020-08-24\")\n    },\n    145: {\n      id: 145,\n      title: \"AWS\",\n      amount: 0.16,\n      accountId: 3576,\n      categoryId: 46,\n      date: new Date(\"2020-09-24\")\n    }\n  },\n  ui: {\n    addExpense: {\n      opened: false\n    },\n    editAccount: {\n      opened: false\n    },\n    editCategory: {\n      opened: false\n    }\n  }\n})\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n","import { createStore } from \"redux\";\nimport { rootReducer, RootState } from \"./rootReducer\";\n\nexport default function configureStore(preloadedState: RootState) {\n  const dataRaw = localStorage.getItem(\"storeData\")\n  const store = createStoreBaseOnLocalStorage()\n\n  function createStoreBaseOnLocalStorage() {\n    if (dataRaw) {\n      const storeData = JSON.parse(dataRaw) as RootState\n      const storeDateFixed = { ...storeData }\n      Object.values(storeData.expenses).forEach(it => {\n        storeDateFixed.expenses[it.id].date = new Date(it.date)\n      })\n      const storeVersion = localStorage.getItem(\"storeVersion\")\n      const currentStoreVersion = \"1\"\n      localStorage.setItem(\"storeVersion\", currentStoreVersion)\n      return createStore(rootReducer, (storeVersion === currentStoreVersion) ? storeDateFixed : preloadedState)\n    } else {\n      return createStore(rootReducer, preloadedState)\n    }\n  }\n\n  store.subscribe(() => {\n    localStorage.setItem(\"storeData\", JSON.stringify(store.getState()))\n  });\n  return store\n}\n"],"sourceRoot":""}